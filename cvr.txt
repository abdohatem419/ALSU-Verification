Coverage Report by instance with details

=================================================================================
=== Instance: /ALSU_tb/dut1
=== Design Unit: work.ALSU
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        32        32         0    100.00%

================================Branch Details================================

Branch Coverage for instance /ALSU_tb/dut1

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ALSU.v
------------------------------------IF Branch------------------------------------
    23                                    139577     Count coming in to IF
    23              1                       3578       if(rst) begin
    34              1                     135999       end else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    50                                    141594     Count coming in to IF
    50              1                       5576       if(rst) begin
    52              1                     136018       end else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    53                                    136018     Count coming in to IF
    53              1                       7414           if (invalid)
    55              1                     128604           else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    62                                    130565     Count coming in to IF
    62              1                       3160       if(rst) begin
    65              1                     127405       else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    66                                    127405     Count coming in to IF
    66              1                       5114         if (invalid) 
    68              1                         76         else if (bypass_A_reg && bypass_B_reg)
    70              1                        648         else if (bypass_A_reg)
    72              1                        584         else if (bypass_B_reg)
    74              1                     120983         else begin
Branch totals: 5 hits of 5 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    75                                    120983     Count coming in to CASE
    76              1                      21894               3'h0: begin                                   //OPCODE FOR OR NOT AND
    86              1                      20408               3'h1: begin
    96              1                      19572               3'h2: out <= A_reg + B_reg +cin_reg;          //FULL ADDER IS ON NEED TO ADD CIN
    97              1                      19830               3'h3: out <= A_reg * B_reg;
    98              1                      19909               3'h4: begin
    104             1                      19370               3'h5: begin
                                         18     All False Count
Branch totals: 7 hits of 7 branches = 100.00%

------------------------------------IF Branch------------------------------------
    77                                     21894     Count coming in to IF
    77              1                        237                 if (red_op_A_reg && red_op_B_reg)
    79              1                        191                 else if (red_op_A_reg) 
    81              1                        169                 else if (red_op_B_reg)
    83              1                      21297                 else 
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    87                                     20408     Count coming in to IF
    87              1                        257                 if (red_op_A_reg && red_op_B_reg)           //OPCODE FOR XOR NOT OR
    89              1                        166                 else if (red_op_A_reg) 
    91              1                        187                 else if (red_op_B_reg)
    93              1                      19798                 else 
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    99                                     19909     Count coming in to IF
    99              1                       9955                 if (direction_reg)
    101             1                       9954                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    105                                    19370     Count coming in to IF
    105             1                       9744                 if (direction_reg)
    107             1                       9626                 else
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       6         6         0   100.00%

================================Condition Details================================

Condition Coverage for instance /ALSU_tb/dut1 --

  File ALSU.v
----------------Focused Condition View-------------------
Line       68 Item    1  (bypass_A_reg && bypass_B_reg)
Condition totals: 2 of 2 input terms covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  bypass_A_reg         Y
  bypass_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  bypass_A_reg_0        -                             
  Row   2:          1  bypass_A_reg_1        bypass_B_reg                  
  Row   3:          1  bypass_B_reg_0        bypass_A_reg                  
  Row   4:          1  bypass_B_reg_1        bypass_A_reg                  

----------------Focused Condition View-------------------
Line       77 Item    1  (red_op_A_reg && red_op_B_reg)
Condition totals: 2 of 2 input terms covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  red_op_A_reg         Y
  red_op_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        -                             
  Row   2:          1  red_op_A_reg_1        red_op_B_reg                  
  Row   3:          1  red_op_B_reg_0        red_op_A_reg                  
  Row   4:          1  red_op_B_reg_1        red_op_A_reg                  

----------------Focused Condition View-------------------
Line       87 Item    1  (red_op_A_reg && red_op_B_reg)
Condition totals: 2 of 2 input terms covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  red_op_A_reg         Y
  red_op_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        -                             
  Row   2:          1  red_op_A_reg_1        red_op_B_reg                  
  Row   3:          1  red_op_B_reg_0        red_op_A_reg                  
  Row   4:          1  red_op_B_reg_1        red_op_A_reg                  


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                      8         8         0   100.00%

================================Expression Details================================

Expression Coverage for instance /ALSU_tb/dut1 --

  File ALSU.v
----------------Focused Expression View-----------------
Line       17 Item    1  ((red_op_A_reg | red_op_B_reg) & (opcode_reg[1] | opcode_reg[2]))
Expression totals: 4 of 4 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
   red_op_A_reg         Y
   red_op_B_reg         Y
  opcode_reg[1]         Y
  opcode_reg[2]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_B_reg)
  Row   2:          1  red_op_A_reg_1        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_B_reg)
  Row   3:          1  red_op_B_reg_0        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_A_reg)
  Row   4:          1  red_op_B_reg_1        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_A_reg)
  Row   5:          1  opcode_reg[1]_0       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[2])
  Row   6:          1  opcode_reg[1]_1       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[2])
  Row   7:          1  opcode_reg[2]_0       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[1])
  Row   8:          1  opcode_reg[2]_1       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[1])

----------------Focused Expression View-----------------
Line       18 Item    1  (opcode_reg[1] & opcode_reg[2])
Expression totals: 2 of 2 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  opcode_reg[1]         Y
  opcode_reg[2]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  opcode_reg[1]_0       opcode_reg[2]                 
  Row   2:          1  opcode_reg[1]_1       opcode_reg[2]                 
  Row   3:          1  opcode_reg[2]_0       opcode_reg[1]                 
  Row   4:          1  opcode_reg[2]_1       opcode_reg[1]                 

----------------Focused Expression View-----------------
Line       19 Item    1  (invalid_red_op | invalid_opcode)
Expression totals: 2 of 2 input terms covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  invalid_red_op         Y
  invalid_opcode         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  invalid_red_op_0      ~invalid_opcode               
  Row   2:          1  invalid_red_op_1      ~invalid_opcode               
  Row   3:          1  invalid_opcode_0      ~invalid_red_op               
  Row   4:          1  invalid_opcode_1      ~invalid_red_op               


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      48        48         0   100.00%

================================Statement Details================================

Statement Coverage for instance /ALSU_tb/dut1 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ALSU.v
    1                                                module ALSU(A, B, cin, serial_in, red_op_A, red_op_B, opcode, bypass_A, bypass_B, clk, rst, direction, leds, out);
    2                                                parameter INPUT_PRIORITY = "A";
    3                                                parameter FULL_ADDER = "ON";
    4                                                input clk, rst, red_op_A, red_op_B, bypass_A, bypass_B, direction, serial_in;
    5                                                input signed cin;
    6                                                input [2:0] opcode;
    7                                                input signed [2:0] A, B;
    8                                                output reg [15:0] leds;
    9                                                output reg signed [5:0] out;
    10                                               
    11                                               reg cin_reg, red_op_A_reg, red_op_B_reg, bypass_A_reg, bypass_B_reg, direction_reg, serial_in_reg;
    12                                               reg [2:0] opcode_reg, A_reg, B_reg;
    13                                               
    14                                               wire invalid_red_op, invalid_opcode, invalid;
    15                                               
    16                                               //Invalid handling
    17              1                      67281     assign invalid_red_op = (red_op_A_reg | red_op_B_reg) & (opcode_reg[1] | opcode_reg[2]);
    18              1                      66430     assign invalid_opcode = opcode_reg[1] & opcode_reg[2];
    19              1                       5010     assign invalid = invalid_red_op | invalid_opcode;
    20                                               
    21                                               //Registering input signals
    22              1                     139577     always @(posedge clk or posedge rst) begin
    23                                                 if(rst) begin
    24              1                       3578          cin_reg <= 0;
    25              1                       3578          red_op_B_reg <= 0;
    26              1                       3578          red_op_A_reg <= 0;
    27              1                       3578          bypass_B_reg <= 0;
    28              1                       3578          bypass_A_reg <= 0;
    29              1                       3578          direction_reg <= 0;
    30              1                       3578          serial_in_reg <= 0;
    31              1                       3578          opcode_reg <= 0;
    32              1                       3578          A_reg <= 0;
    33              1                       3578          B_reg <= 0;
    34                                                 end else begin
    35              1                     135999          cin_reg <= cin;
    36              1                     135999          red_op_B_reg <= red_op_B;
    37              1                     135999          red_op_A_reg <= red_op_A;
    38              1                     135999          bypass_B_reg <= bypass_B;
    39              1                     135999          bypass_A_reg <= bypass_A;
    40              1                     135999          direction_reg <= direction;
    41              1                     135999          serial_in_reg <= serial_in;
    42              1                     135999          opcode_reg <= opcode;
    43              1                     135999          A_reg <= A;
    44              1                     135999          B_reg <= B;
    45                                                 end
    46                                               end
    47                                               
    48                                               //leds output blinking 
    49              1                     141594     always @(posedge clk or posedge rst) begin
    50                                                 if(rst) begin
    51              1                       5576          leds <= 0;
    52                                                 end else begin
    53                                                     if (invalid)
    54              1                       7414             leds <= ~leds;
    55                                                     else
    56              1                     128604             leds <= 0;
    57                                                 end
    58                                               end
    59                                               
    60                                               //ALSU output processing
    61              1                     130565     always @(posedge clk or posedge rst) begin
    62                                                 if(rst) begin
    63              1                       3160         out <= 0;
    64                                                 end
    65                                                 else begin
    66                                                   if (invalid) 
    67              1                       5114             out <= 0;
    68                                                   else if (bypass_A_reg && bypass_B_reg)
    69              1                         76           out <= (INPUT_PRIORITY == "A")? A_reg: B_reg;
    70                                                   else if (bypass_A_reg)
    71              1                        648           out <= A_reg;
    72                                                   else if (bypass_B_reg)
    73              1                        584           out <= B_reg;
    74                                                   else begin
    75                                                       case (opcode_reg)
    76                                                         3'h0: begin                                   //OPCODE FOR OR NOT AND
    77                                                           if (red_op_A_reg && red_op_B_reg)
    78              1                        237                   out = (INPUT_PRIORITY == "A")? |A_reg: |B_reg;
    79                                                           else if (red_op_A_reg) 
    80              1                        191                   out <= |A_reg;
    81                                                           else if (red_op_B_reg)
    82              1                        169                   out <= |B_reg;
    83                                                           else 
    84              1                      21297                   out <= A_reg | B_reg;
    85                                                         end
    86                                                         3'h1: begin
    87                                                           if (red_op_A_reg && red_op_B_reg)           //OPCODE FOR XOR NOT OR
    88              1                        257                   out <= (INPUT_PRIORITY == "A")? ^A_reg: ^B_reg;
    89                                                           else if (red_op_A_reg) 
    90              1                        166                   out <= ^A_reg;
    91                                                           else if (red_op_B_reg)
    92              1                        187                   out <= ^B_reg;
    93                                                           else 
    94              1                      19798                   out <= A_reg ^ B_reg;
    95                                                         end
    96              1                      19572               3'h2: out <= A_reg + B_reg +cin_reg;          //FULL ADDER IS ON NEED TO ADD CIN
    97              1                      19830               3'h3: out <= A_reg * B_reg;
    98                                                         3'h4: begin
    99                                                           if (direction_reg)
    100             1                       9955                   out <= {out[4:0], serial_in_reg};
    101                                                          else
    102             1                       9954                   out <= {serial_in_reg, out[5:1]};
    103                                                        end
    104                                                        3'h5: begin
    105                                                          if (direction_reg)
    106             1                       9744                   out <= {out[4:0], out[5]};
    107                                                          else
    108             1                       9626                   out <= {out[0], out[5:1]};

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        118       118         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /ALSU_tb/dut1 --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                            A[0-2]           1           1      100.00 
                                        A_reg[2-0]           1           1      100.00 
                                            B[0-2]           1           1      100.00 
                                        B_reg[2-0]           1           1      100.00 
                                          bypass_A           1           1      100.00 
                                      bypass_A_reg           1           1      100.00 
                                          bypass_B           1           1      100.00 
                                      bypass_B_reg           1           1      100.00 
                                               cin           1           1      100.00 
                                           cin_reg           1           1      100.00 
                                               clk           1           1      100.00 
                                         direction           1           1      100.00 
                                     direction_reg           1           1      100.00 
                                           invalid           1           1      100.00 
                                    invalid_opcode           1           1      100.00 
                                    invalid_red_op           1           1      100.00 
                                        leds[15-0]           1           1      100.00 
                                       opcode[0-2]           1           1      100.00 
                                   opcode_reg[2-0]           1           1      100.00 
                                          out[5-0]           1           1      100.00 
                                          red_op_A           1           1      100.00 
                                      red_op_A_reg           1           1      100.00 
                                          red_op_B           1           1      100.00 
                                      red_op_B_reg           1           1      100.00 
                                               rst           1           1      100.00 
                                         serial_in           1           1      100.00 
                                     serial_in_reg           1           1      100.00 

Total Node Count     =         59 
Toggled Node Count   =         59 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (118 of 118 bins)

=================================================================================
=== Instance: /ALSU_tb/dut2
=== Design Unit: work.ALSU_GM
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        34        32         2    94.11%

================================Branch Details================================

Branch Coverage for instance /ALSU_tb/dut2

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ALSU_GM.v
------------------------------------IF Branch------------------------------------
    18                                    139577     Count coming in to IF
    18              1                       3578         if(rst)begin
    30              1                     135999         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    46                                    133556     Count coming in to IF
    46              1                       3465         if(rst)begin
    50              1                     130091         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    51                                    130091     Count coming in to IF
    51              1                       7414             if((opcode_reg==3'b110||opcode_reg==3'b111)||((red_op_A_reg==1||red_op_B_reg==1)&&(opcode_reg!=3'b000&&opcode_reg!=3'b001)))begin
    55              1                       1396             else if(bypass_A_reg||bypass_B_reg) begin
    71              1                     121281         else begin
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    56                                      1396     Count coming in to IF
    56              1                         79                 if(bypass_A_reg&&bypass_B_reg)begin
    64              1                        692                 else if(bypass_A_reg)begin
    67              1                        625                 else if(bypass_B_reg)begin
                                         ***0***     All False Count
Branch totals: 3 hits of 4 branches = 75.00%

------------------------------------CASE Branch------------------------------------
    72                                    121281     Count coming in to CASE
    73              1                      21929                 3'b000:begin
    86              1                      20472                 3'b001:begin
    99              1                      19587                 3'b010:begin
    107             1                      19896                 3'b011:begin
    110             1                      19944                 3'b100:begin
    118             1                      19453                 3'b101:begin
                                         ***0***     All False Count
Branch totals: 6 hits of 7 branches = 85.71%

------------------------------------IF Branch------------------------------------
    74                                     21929     Count coming in to IF
    74              1                        614                     if(red_op_A_reg||red_op_B_reg)begin
    82              1                      21315                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    75                                       614     Count coming in to IF
    75              1                        242                         if(red_op_A_reg&&red_op_B_reg)begin
    79              1                        176                          else if(red_op_A)out<=|A_reg;
    80              1                        134                          else if(red_op_B)out<=|B_reg;
                                              62     All False Count
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    87                                     20472     Count coming in to IF
    87              1                        632                     if(red_op_A_reg||red_op_B_reg)begin
    95              1                      19840                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    88                                       632     Count coming in to IF
    88              1                        265                         if(red_op_A_reg&&red_op_B_reg)begin
    92              1                        158                          else if(red_op_A)out<=^A_reg;
    93              1                        141                          else if(red_op_B)out<=^B_reg;
                                              68     All False Count
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    111                                    19944     Count coming in to IF
    111             1                       9971                          if(direction_reg)begin
    114             1                       9973                          else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    119                                    19453     Count coming in to IF
    119             1                       9787                          if(direction_reg)begin
    122             1                       9666                          else begin
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      18        18         0   100.00%

================================Condition Details================================

Condition Coverage for instance /ALSU_tb/dut2 --

  File ALSU_GM.v
----------------Focused Condition View-------------------
Line       51 Item    1  (((opcode_reg == 6) || (opcode_reg == 7)) || (((red_op_A_reg || red_op_B_reg) && (opcode_reg != 0)) && (opcode_reg != 1)))
Condition totals: 6 of 6 input terms covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (opcode_reg == 6)         Y
  (opcode_reg == 7)         Y
       red_op_A_reg         Y
       red_op_B_reg         Y
  (opcode_reg != 0)         Y
  (opcode_reg != 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (opcode_reg == 6)_0   (~(((red_op_A_reg || red_op_B_reg) && (opcode_reg != 0)) && (opcode_reg != 1)) && ~(opcode_reg == 7))
  Row   2:          1  (opcode_reg == 6)_1   -                             
  Row   3:          1  (opcode_reg == 7)_0   (~(((red_op_A_reg || red_op_B_reg) && (opcode_reg != 0)) && (opcode_reg != 1)) && ~(opcode_reg == 6))
  Row   4:          1  (opcode_reg == 7)_1   ~(opcode_reg == 6)            
  Row   5:          1  red_op_A_reg_0        (~((opcode_reg == 6) || (opcode_reg == 7)) && ~red_op_B_reg)
  Row   6:          1  red_op_A_reg_1        (~((opcode_reg == 6) || (opcode_reg == 7)) && (opcode_reg != 1) && (opcode_reg != 0))
  Row   7:          1  red_op_B_reg_0        (~((opcode_reg == 6) || (opcode_reg == 7)) && ~red_op_A_reg)
  Row   8:          1  red_op_B_reg_1        (~((opcode_reg == 6) || (opcode_reg == 7)) && (opcode_reg != 1) && (opcode_reg != 0) && ~red_op_A_reg)
  Row   9:          1  (opcode_reg != 0)_0   (~((opcode_reg == 6) || (opcode_reg == 7)) && (red_op_A_reg || red_op_B_reg))
 Row   10:          1  (opcode_reg != 0)_1   (~((opcode_reg == 6) || (opcode_reg == 7)) && (opcode_reg != 1) && (red_op_A_reg || red_op_B_reg))
 Row   11:          1  (opcode_reg != 1)_0   (~((opcode_reg == 6) || (opcode_reg == 7)) && ((red_op_A_reg || red_op_B_reg) && (opcode_reg != 0)))
 Row   12:          1  (opcode_reg != 1)_1   (~((opcode_reg == 6) || (opcode_reg == 7)) && ((red_op_A_reg || red_op_B_reg) && (opcode_reg != 0)))

----------------Focused Condition View-------------------
Line       55 Item    1  (bypass_A_reg || bypass_B_reg)
Condition totals: 2 of 2 input terms covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  bypass_A_reg         Y
  bypass_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  bypass_A_reg_0        ~bypass_B_reg                 
  Row   2:          1  bypass_A_reg_1        -                             
  Row   3:          1  bypass_B_reg_0        ~bypass_A_reg                 
  Row   4:          1  bypass_B_reg_1        ~bypass_A_reg                 

----------------Focused Condition View-------------------
Line       56 Item    1  (bypass_A_reg && bypass_B_reg)
Condition totals: 2 of 2 input terms covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  bypass_A_reg         Y
  bypass_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  bypass_A_reg_0        -                             
  Row   2:          1  bypass_A_reg_1        bypass_B_reg                  
  Row   3:          1  bypass_B_reg_0        bypass_A_reg                  
  Row   4:          1  bypass_B_reg_1        bypass_A_reg                  

----------------Focused Condition View-------------------
Line       74 Item    1  (red_op_A_reg || red_op_B_reg)
Condition totals: 2 of 2 input terms covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  red_op_A_reg         Y
  red_op_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        ~red_op_B_reg                 
  Row   2:          1  red_op_A_reg_1        -                             
  Row   3:          1  red_op_B_reg_0        ~red_op_A_reg                 
  Row   4:          1  red_op_B_reg_1        ~red_op_A_reg                 

----------------Focused Condition View-------------------
Line       75 Item    1  (red_op_A_reg && red_op_B_reg)
Condition totals: 2 of 2 input terms covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  red_op_A_reg         Y
  red_op_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        -                             
  Row   2:          1  red_op_A_reg_1        red_op_B_reg                  
  Row   3:          1  red_op_B_reg_0        red_op_A_reg                  
  Row   4:          1  red_op_B_reg_1        red_op_A_reg                  

----------------Focused Condition View-------------------
Line       87 Item    1  (red_op_A_reg || red_op_B_reg)
Condition totals: 2 of 2 input terms covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  red_op_A_reg         Y
  red_op_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        ~red_op_B_reg                 
  Row   2:          1  red_op_A_reg_1        -                             
  Row   3:          1  red_op_B_reg_0        ~red_op_A_reg                 
  Row   4:          1  red_op_B_reg_1        ~red_op_A_reg                 

----------------Focused Condition View-------------------
Line       88 Item    1  (red_op_A_reg && red_op_B_reg)
Condition totals: 2 of 2 input terms covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  red_op_A_reg         Y
  red_op_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        -                             
  Row   2:          1  red_op_A_reg_1        red_op_B_reg                  
  Row   3:          1  red_op_B_reg_0        red_op_A_reg                  
  Row   4:          1  red_op_B_reg_1        red_op_A_reg                  


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      43        43         0   100.00%

================================Statement Details================================

Statement Coverage for instance /ALSU_tb/dut2 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ALSU_GM.v
    1                                                module ALSU_GM(clk,rst,A,B,Cin,serial_in,red_op_A,red_op_B,opcode,bypass_A,bypass_B,direction,leds,out);
    2                                                /*Ports declaration*/
    3                                                input clk,rst,serial_in,red_op_A,red_op_B,bypass_A,bypass_B,direction;
    4                                                input signed Cin;
    5                                                input signed [2:0]A,B;
    6                                                input [2:0] opcode;
    7                                                output reg [15:0]leds;
    8                                                output  reg signed [5:0]out;
    9                                                /*Internal signals*/
    10                                               reg Cin_reg,serial_in_reg,red_op_A_reg,red_op_B_reg,bypass_A_reg,bypass_B_reg,direction_reg;
    11                                               reg [2:0]A_reg,B_reg,opcode_reg;
    12                                               /*Parameters definitions*/
    13                                               parameter INPUT_PRIORITY ="A" ;
    14                                               parameter FULL_ADDER="ON";
    15                                               
    16                                               
    17              1                     139577     always@(posedge clk or posedge rst)begin
    18                                                   if(rst)begin
    19              1                       3578             serial_in_reg<=0;
    20              1                       3578             red_op_A_reg <=0;
    21              1                       3578             red_op_B_reg <=0;
    22              1                       3578             bypass_A_reg <=0;
    23              1                       3578             bypass_B_reg <=0;
    24              1                       3578             direction_reg<=0;
    25              1                       3578             A_reg        <=0;
    26              1                       3578             B_reg        <=0;   
    27              1                       3578             opcode_reg   <=0;
    28              1                       3578             Cin_reg      <=0;
    29                                                   end
    30                                                   else begin
    31              1                     135999             serial_in_reg<=serial_in;
    32              1                     135999             red_op_A_reg <=red_op_A;
    33              1                     135999             red_op_B_reg <=red_op_B;
    34              1                     135999             bypass_A_reg <=bypass_A;
    35              1                     135999             bypass_B_reg <=bypass_B;
    36              1                     135999             direction_reg<=direction;
    37              1                     135999             A_reg        <=A;
    38              1                     135999             B_reg        <=B;   
    39              1                     135999             opcode_reg   <=opcode;
    40              1                     135999             Cin_reg      <=Cin;
    41                                                   end
    42                                               end
    43                                               
    44                                               /*main functionality*/
    45              1                     133556     always@(posedge clk or posedge rst)begin
    46                                                   if(rst)begin
    47              1                       3465             leds         <=0;
    48              1                       3465             out          <=0;
    49                                                   end
    50                                                   else begin
    51                                                       if((opcode_reg==3'b110||opcode_reg==3'b111)||((red_op_A_reg==1||red_op_B_reg==1)&&(opcode_reg!=3'b000&&opcode_reg!=3'b001)))begin
    52              1                       7414                 leds<=leds^16'hFFFF;
    53              1                       7414                 out<=0;
    54                                                       end
    55                                                       else if(bypass_A_reg||bypass_B_reg) begin
    56                                                           if(bypass_A_reg&&bypass_B_reg)begin
    57                                                               if(INPUT_PRIORITY == "A" )begin
    58              1                         79                         out<=A_reg;
    59                                                               end
    60                                                               else if(INPUT_PRIORITY == "B")begin
    61                                                                   out<=B_reg;
    62                                                               end
    63                                                           end
    64                                                           else if(bypass_A_reg)begin
    65              1                        692                     out<=A_reg;
    66                                                           end
    67                                                           else if(bypass_B_reg)begin
    68              1                        625                     out<=B_reg;
    69                                                           end
    70                                                   end
    71                                                   else begin
    72                                                       case (opcode_reg)
    73                                                           3'b000:begin
    74                                                               if(red_op_A_reg||red_op_B_reg)begin
    75                                                                   if(red_op_A_reg&&red_op_B_reg)begin
    76              1                        242                             if(INPUT_PRIORITY=="A")out<=|A_reg;
    77                                                                       else if(INPUT_PRIORITY=="B")out<=|B_reg;
    78                                                                   end
    79              1                        176                          else if(red_op_A)out<=|A_reg;
    80              1                        134                          else if(red_op_B)out<=|B_reg;
    81                                                               end
    82                                                               else begin
    83              1                      21315                         out<=A_reg|B_reg;
    84                                                               end
    85                                                           end
    86                                                           3'b001:begin
    87                                                               if(red_op_A_reg||red_op_B_reg)begin
    88                                                                   if(red_op_A_reg&&red_op_B_reg)begin
    89              1                        265                             if(INPUT_PRIORITY=="A")out<=^A_reg;
    90                                                                       else if(INPUT_PRIORITY=="B")out<=^B_reg;
    91                                                                   end
    92              1                        158                          else if(red_op_A)out<=^A_reg;
    93              1                        141                          else if(red_op_B)out<=^B_reg;
    94                                                               end
    95                                                               else begin
    96              1                      19840                         out<=A_reg^B_reg;
    97                                                               end
    98                                                           end
    99                                                           3'b010:begin
    100                                                                   if(FULL_ADDER=="ON")begin
    101             1                      19587                             out<=A_reg+B_reg+Cin_reg;
    102                                                                   end
    103                                                                   else if(FULL_ADDER=="OFF")begin
    104                                                                      out<=A_reg+B_reg;
    105                                                                   end   
    106                                                          end
    107                                                          3'b011:begin
    108             1                      19896                     out<=A_reg*B_reg;
    109                                                          end
    110                                                          3'b100:begin
    111                                                                   if(direction_reg)begin
    112             1                       9971                             out<={out[4:0],serial_in_reg};
    113                                                                   end
    114                                                                   else begin
    115             1                       9973                             out<={serial_in_reg,out[5:1]};
    116                                                                   end
    117                                                          end
    118                                                          3'b101:begin
    119                                                                   if(direction_reg)begin
    120             1                       9787                             out<={out[4:0],out[5]};
    121                                                                   end
    122                                                                   else begin
    123             1                       9666                             out<={out[0],out[5:1]};

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        112       112         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /ALSU_tb/dut2 --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                            A[0-2]           1           1      100.00 
                                        A_reg[2-0]           1           1      100.00 
                                            B[0-2]           1           1      100.00 
                                        B_reg[2-0]           1           1      100.00 
                                               Cin           1           1      100.00 
                                           Cin_reg           1           1      100.00 
                                          bypass_A           1           1      100.00 
                                      bypass_A_reg           1           1      100.00 
                                          bypass_B           1           1      100.00 
                                      bypass_B_reg           1           1      100.00 
                                               clk           1           1      100.00 
                                         direction           1           1      100.00 
                                     direction_reg           1           1      100.00 
                                        leds[15-0]           1           1      100.00 
                                       opcode[0-2]           1           1      100.00 
                                   opcode_reg[2-0]           1           1      100.00 
                                          out[5-0]           1           1      100.00 
                                          red_op_A           1           1      100.00 
                                      red_op_A_reg           1           1      100.00 
                                          red_op_B           1           1      100.00 
                                      red_op_B_reg           1           1      100.00 
                                               rst           1           1      100.00 
                                         serial_in           1           1      100.00 
                                     serial_in_reg           1           1      100.00 

Total Node Count     =         56 
Toggled Node Count   =         56 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (112 of 112 bins)

=================================================================================
=== Instance: /ALSU_tb
=== Design Unit: work.ALSU_tb
=================================================================================

Assertion Coverage:
    Assertions                       8         8         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/ALSU_tb/randomdata_first_loop/#anonblk#102282978#46#4#/#ublk#102282978#46/immed__47
                     ALSU_tb.sv(47)                     0          1
/ALSU_tb/randomdata_second_loop/#anonblk#102282978#65#4#/#ublk#102282978#65/immed__66
                     ALSU_tb.sv(66)                     0          1
/ALSU_tb/cover_transition/immed__124
                     ALSU_tb.sv(124)                    0          1
/ALSU_tb/cover_transition/immed__121
                     ALSU_tb.sv(121)                    0          1
/ALSU_tb/cover_transition/immed__118
                     ALSU_tb.sv(118)                    0          1
/ALSU_tb/cover_transition/immed__115
                     ALSU_tb.sv(115)                    0          1
/ALSU_tb/cover_transition/immed__112
                     ALSU_tb.sv(112)                    0          1
/ALSU_tb/cover_transition/immed__104
                     ALSU_tb.sv(104)                    0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         4         3         1    75.00%

================================Branch Details================================

Branch Coverage for instance /ALSU_tb
NOTE: The modification timestamp for source file 'ALSU_tb.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ALSU_tb.sv
------------------------------------IF Branch------------------------------------
    94                                     70006     Count coming in to IF
    94              1                       3657         if (rst || bypass_A || bypass_B) begin
    97              1                      66349         end else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    132                                    70007     Count coming in to IF
    132             1                    ***0***             if(out_1 != out_2 || leds_1 != leds_2) begin
    137             1                      70007             else begin
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       5         3         2    60.00%

================================Condition Details================================

Condition Coverage for instance /ALSU_tb --
NOTE: The modification timestamp for source file 'ALSU_tb.sv' has been altered since compilation.

  File ALSU_tb.sv
----------------Focused Condition View-------------------
Line       94 Item    1  ((rst || bypass_A) || bypass_B)
Condition totals: 3 of 3 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
         rst         Y
    bypass_A         Y
    bypass_B         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  rst_0                 (~bypass_B && ~bypass_A)      
  Row   2:          1  rst_1                 -                             
  Row   3:          1  bypass_A_0            (~bypass_B && ~rst)           
  Row   4:          1  bypass_A_1            ~rst                          
  Row   5:          1  bypass_B_0            ~(rst || bypass_A)            
  Row   6:          1  bypass_B_1            ~(rst || bypass_A)            

----------------Focused Condition View-------------------
Line       132 Item    1  ((out_1 != out_2) || (leds_1 != leds_2))
Condition totals: 0 of 2 input terms covered = 0.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
    (out_1 != out_2)         N  '_1' not hit             Hit '_1'
  (leds_1 != leds_2)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (out_1 != out_2)_0    ~(leds_1 != leds_2)           
  Row   2:    ***0***  (out_1 != out_2)_1    -                             
  Row   3:          1  (leds_1 != leds_2)_0  ~(out_1 != out_2)             
  Row   4:    ***0***  (leds_1 != leds_2)_1  ~(out_1 != out_2)             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      86        83         3    96.51%

================================Statement Details================================

Statement Coverage for instance /ALSU_tb --
NOTE: The modification timestamp for source file 'ALSU_tb.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ALSU_tb.sv
    1                                                module ALSU_tb;
    2                                                
    3                                                import process::*;
    4                                                
    5                                                parameter ITERATION = 1000;
    6               1                          1     inputs mm = new();
    7                                                
    8                                                logic clk, rst, cin, red_op_A, red_op_B, bypass_A, bypass_B, direction, serial_in;
    9                                                logic [2:0] opcode;
    10                                               logic signed [2:0] A, B;
    11                                               wire [15:0] leds_1,leds_2;
    12                                               wire [5:0] out_1,out_2;
    13                                               int ERROR_COUNT,CORRECT_COUNT;
    14                                               
    15                                               ALSU dut1 (A, B, cin, serial_in, red_op_A, red_op_B, opcode, bypass_A, bypass_B, clk, rst, direction, leds_1, out_1);
    16                                               ALSU_GM dut2 (clk,rst,A,B,cin,serial_in,red_op_A,red_op_B,opcode,bypass_A,bypass_B,direction,leds_2,out_2);
    17                                               
    18                                               initial begin
    19              1                          1         clk = 0;
    20              1                          1         forever #1 clk =~ clk;
    20              2                     280029     
    20              3                     280028     
    21                                               end
    22                                               
    23                                               initial begin
    24              1                          1         ERROR_COUNT = 0;
    25              1                          1         CORRECT_COUNT = 0;
    26              1                          1         assert_reset();                            //LABEL 1
    27              1                          1         mm.cvr_gb.start();
    28              1                          1         mm.fixed_array.constraint_mode(0);
    29              1                          1         randomdata_first_loop();                              //LABEL 2
    30              1                          1         mm.constraint_mode(0);
    31              1                          1         rst      = 0;
    32              1                          1         bypass_A = 0;
    33              1                          1         bypass_B = 0;
    34              1                          1         red_op_A = 0;
    35              1                          1         red_op_B = 0;
    36              1                          1         mm.fixed_array.constraint_mode(1);
    37              1                          1         randomdata_second_loop();
    38              1                          1         mm.constraint_mode(1);
    39              1                          1         mm.fixed_array.constraint_mode(0);
    40              1                          1         cover_transition(); //to achieve 100% functional coverage of transition bin  
    41              1                          1         display_results();
    42              1                          1         $stop;
    43                                               end
    44                                               
    45                                               task randomdata_first_loop();
    46              1                          1         for (int i =0 ; i < ITERATION ; i++ ) begin     
    46              2                      10000     
    47                                                       assert(mm.randomize);
    48              1                      10000             rst       =mm.rst ; 
    49              1                      10000             cin       =mm.cin ; 
    50              1                      10000             red_op_A  =mm.red_op_A ; 
    51              1                      10000             red_op_B  =mm.red_op_B ; 
    52              1                      10000             bypass_A  =mm.bypass_A ; 
    53              1                      10000             bypass_B  =mm.bypass_B ; 
    54              1                      10000             direction =mm.direction ; 
    55              1                      10000             serial_in =mm.serial_in ;
    56              1                      10000             opcode    =mm.opcode ;
    57              1                      10000             A         =mm.A ; 
    58              1                      10000             B         =mm.B ;
    59              1                      10000             sample_task();
    60              1                      10000             check_result();
    61                                                   end
    62                                               endtask
    63                                               
    64                                               task randomdata_second_loop();
    65              1                          1         for (int i =0 ; i < ITERATION ; i++ ) begin     
    65              2                      10000     
    66                                                       assert(mm.randomize); 
    67              1                      10000             cin       =mm.cin ;  
    68              1                      10000             direction =mm.direction ; 
    69              1                      10000             serial_in =mm.serial_in ;
    70              1                      10000             A         =mm.A ; 
    71              1                      10000             B         =mm.B ;
    72              1                      10000             for (int count = 0 ; count < 6 ; count++) begin
    72              2                      60000     
    73              1                      60000                 opcode    =mm.arr[count] ;
    74              1                      60000                 sample_task();
    75              1                      60000                 check_result();
    76                                                       end
    77                                                   end
    78                                               endtask
    79                                               
    80                                               task display_results();
    81              1                          1         $display("ERROR CASES = %d ,VALID CASES = %d",ERROR_COUNT,CORRECT_COUNT);
    82                                               endtask
    83                                               
    84                                               task assert_reset();
    85              1                          1             rst = 1;
    86              1                          1             check_result();
    87              1                          1             rst = 0;
    88                                               endtask
    89                                               
    90                                               task sample_task();
    91              1                      70006         mm.cvr_gb.start();
    92              1                      70006         $display("Sampling: rst=%b, bypass_A=%b, bypass_B=%b, opcode=%b, A=%b, B=%b", 
    93                                                            rst, bypass_A, bypass_B, mm.opcode, mm.A, mm.B);
    94                                                   if (rst || bypass_A || bypass_B) begin
    95              1                       3657             $display("Coverage sampling stopped due to reset or bypass signals being asserted.");
    96              1                       3657             mm.cvr_gb.stop();
    97                                                   end else begin
    98              1                      66349             $display("sampled");
    99              1                      66349             mm.cvr_gb.sample();
    100                                                  end
    101                                              endtask
    102                                              
    103                                              task cover_transition();
    104                                                      assert(mm.randomize()with{opcode == 0;});
    105             1                          1             cin       =mm.cin ;  
    106             1                          1             direction =mm.direction ; 
    107             1                          1             serial_in =mm.serial_in ;
    108             1                          1             A         =mm.A ; 
    109             1                          1             B         =mm.B ;
    110             1                          1             sample_task();
    111             1                          1             check_result();
    112                                                      assert(mm.randomize()with{opcode == 1;});
    113             1                          1             sample_task();
    114             1                          1             check_result();
    115                                                      assert(mm.randomize()with{opcode == 2;});
    116             1                          1             sample_task();
    117             1                          1             check_result();
    118                                                      assert(mm.randomize()with{opcode == 3;});
    119             1                          1             sample_task();
    120             1                          1             check_result();
    121                                                      assert(mm.randomize()with{opcode == 4;});
    122             1                          1             sample_task();
    123             1                          1             check_result();
    124                                                      assert(mm.randomize()with{opcode == 5;});
    125             1                          1             sample_task();
    126             1                          1             check_result();
    127                                              endtask
    128                                              
    129                                              task check_result();
    130             1                      70007             @(negedge clk);
    131             1                      70007             @(negedge clk);
    132                                                      if(out_1 != out_2 || leds_1 != leds_2) begin
    133             1                    ***0***                 $display("Invalid output expected out =%d , returned %d ,expected leds = %d , returned %d",out_2,out_1,leds_2,leds_1);
    134             1                    ***0***                 ERROR_COUNT = ERROR_COUNT + 1;
    135             1                    ***0***                 $display("A = %b , B = %b , op code = %b , cin = %b , red_op_A = %b , red_op_B = %b , bypass_A = %b , bypass_B = %b , direction = %b , serial_in = %b , out_1 = %b , out_2 = %b , leds_1 = %b , leds_2 = %b",dut2.A_reg,dut2.B_reg,dut2.opcode_reg,dut2.Cin_reg,dut2.red_op_A_reg,dut2.red_op_B_reg,dut2.bypass_A_reg,dut2.bypass_B_reg,dut2.direction_reg,dut2.serial_in_reg,out_1,out_2,leds_1,leds_2);
    136                                                      end
    137                                                      else begin
    138             1                      70007                 $display("Valid Output");
    139             1                      70007                 CORRECT_COUNT = CORRECT_COUNT+1;
    140             1                      70007                 $display("A = %b , B = %b , op code = %b , cin = %b , red_op_A = %b , red_op_B = %b , bypass_A = %b , bypass_B = %b , direction = %b , serial_in = %b , out_1 = %b , out_2 = %b , leds_1 = %b , leds_2 = %b",dut2.A_reg,dut2.B_reg,dut2.opcode_reg,dut2.Cin_reg,dut2.red_op_A_reg,dut2.red_op_B_reg,dut2.bypass_A_reg,dut2.bypass_B_reg,dut2.direction_reg,dut2.serial_in_reg,out_1,out_2,leds_1,leds_2);

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        252       157        95    62.30%

================================Toggle Details================================

Toggle Coverage for instance /ALSU_tb --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                            A[0-2]           1           1      100.00 
                                            B[0-2]           1           1      100.00 
                               CORRECT_COUNT[0-15]           1           1      100.00 
                                 CORRECT_COUNT[16]           0           1       50.00 
                              CORRECT_COUNT[17-31]           0           0        0.00 
                                 ERROR_COUNT[0-31]           0           0        0.00 
                                          bypass_A           1           1      100.00 
                                          bypass_B           1           1      100.00 
                                               cin           1           1      100.00 
                                               clk           1           1      100.00 
                                         direction           1           1      100.00 
                                      leds_1[0-15]           1           1      100.00 
                                      leds_2[0-15]           1           1      100.00 
                                       opcode[0-2]           1           1      100.00 
                                        out_1[0-5]           1           1      100.00 
                                        out_2[0-5]           1           1      100.00 
                                          red_op_A           1           1      100.00 
                                          red_op_B           1           1      100.00 
                                               rst           1           1      100.00 
                                         serial_in           1           1      100.00 

Total Node Count     =        126 
Toggled Node Count   =         78 
Untoggled Node Count =         48 

Toggle Coverage      =      62.30% (157 of 252 bins)

=================================================================================
=== Instance: /process
=== Design Unit: work.process
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses          3        na        na        na
            Covergroup Bins         13        13         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /process/inputs/cvr_gb                          100.00%        100          -    Covered              
    covered/total bins:                                    13         13          -                      
    missing/total bins:                                     0         13          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint A_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint B_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint ALU_cp                                 100.00%        100          -    Covered              
        covered/total bins:                                 7          7          -                      
        missing/total bins:                                 0          7          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/process::inputs::cvr_gb        100.00%        100          -    Covered              
    covered/total bins:                                    13         13          -                      
    missing/total bins:                                     0         13          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint A_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin A_data_0                                     9199          1          -    Covered              
        bin A_data_max                                   9213          1          -    Covered              
        bin A_data_walkingones[1]                        4133          1          -    Covered              
        default bin A_data_default                      39804                     -    Occurred             
    Coverpoint B_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin B_data_0                                     9629          1          -    Covered              
        bin B_data_max                                   9313          1          -    Covered              
        bin B_data_walkingones[1]                        1901          1          -    Covered              
        default bin B_data_default                      39692                     -    Occurred             
    Coverpoint ALU_cp                                 100.00%        100          -    Covered              
        covered/total bins:                                 7          7          -                      
        missing/total bins:                                 0          7          -                      
        % Hit:                                        100.00%        100          -                      
        illegal_bin Bins_invalid                        15386                     -    Occurred             
        bin Bins_shift[SHIFT]                            8835          1          -    Covered              
        bin Bins_shift[ROTATE]                           8002          1          -    Covered              
        bin Bins_arith[ADD]                              8568          1          -    Covered              
        bin Bins_arith[MULT]                             8679          1          -    Covered              
        bin Bins_bitwise[OR]                             8657          1          -    Covered              
        bin Bins_bitwise[XOR]                            8222          1          -    Covered              
        bin Bins_trans                                      1          1          -    Covered              
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       1         1         0   100.00%

================================Statement Details================================

Statement Coverage for instance /process --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ALSU_process.sv
    1                                                package process;
    2                                                
    3                                                typedef enum  {
    4                                                    OR,
    5                                                    XOR,
    6                                                    ADD,
    7                                                    MULT,
    8                                                    SHIFT,
    9                                                    ROTATE,
    10                                                   INVALID_6,
    11                                                   INVALID_7
    12                                                 } opcode_e;
    13                                               
    14                                               localparam  MAXPOS=  3;
    15                                               localparam  MAXNEG= -4;
    16                                               localparam  ZERO  =  0;
    17                                               
    18                                               class inputs;
    19                                               
    20                                                   rand bit rst, cin, red_op_A, red_op_B, bypass_A, bypass_B, direction, serial_in;
    21                                                   rand opcode_e opcode;
    22                                                   rand bit [2:0] A, B;
    23                                                   rand opcode_e arr[6];
    24                                               
    25                                                   constraint rs {
    26                                                       rst dist {
    27                                                           0:=80,
    28                                                           1:=20
    29                                                       };
    30                                                   }
    31                                                   constraint a{
    32                                                       if(opcode == ADD || opcode == MULT)
    33                                                           A dist{
    34                                                               MAXPOS := 30,
    35                                                               MAXNEG := 30,
    36                                                               ZERO   := 30
    37                                                           };
    38                                                       else if((opcode == OR||opcode == XOR )&&(red_op_A))
    39                                                           A dist{
    40                                                               1:=30,
    41                                                               2:=30,
    42                                                               4:=30
    43                                                           };
    44                                                       else if((opcode == OR||opcode == XOR )&&(red_op_B))
    45                                                           A dist{
    46                                                               MAXPOS := 0,
    47                                                               MAXNEG := 0,
    48                                                               ZERO   := 30
    49                                                           };
    50                                                   }
    51                                                   constraint b{
    52                                                       if(opcode == ADD || opcode == MULT)
    53                                                           B dist{
    54                                                               MAXPOS := 30,
    55                                                               MAXNEG := 30,
    56                                                               ZERO   := 30
    57                                                           };
    58                                                       else if((opcode == OR||opcode == XOR )&&(red_op_A))
    59                                                           B dist{
    60                                                               MAXPOS := 0,
    61                                                               MAXNEG := 0,
    62                                                               ZERO   := 30
    63                                                           };
    64                                                       else if((opcode == OR||opcode == XOR )&&(red_op_B))
    65                                                           B dist{
    66                                                               1:=30,
    67                                                               2:=30,
    68                                                               4:=30
    69                                                           };
    70                                                   }
    71                                                   constraint op{
    72                                                       opcode dist{
    73                                                           OR        := 50,
    74                                                           XOR       := 50,
    75                                                           ADD       := 50,
    76                                                           MULT      := 50,
    77                                                           SHIFT     := 50,
    78                                                           ROTATE    := 50,
    79                                                           INVALID_6 := 5,
    80                                                           INVALID_7 := 5
    81                                                       };
    82                                                   }
    83                                                   constraint bypass{
    84                                                       bypass_A dist{
    85                                                           0:=80,
    86                                                           1:=10
    87                                                       };
    88                                                       bypass_B dist{
    89                                                           0:=80,
    90                                                           1:=10
    91                                                       };
    92                                                   }
    93                                                   constraint fixed_array {
    94                                                   // Ensure that each element of the array is within the valid range
    95                                                       foreach(arr[i]) {
    96                                                           arr[i] inside {[0:5]};
    97                                                           foreach(arr[j]){
    98                                                               if(i!=j) arr[i] != arr[j];
    99                                                           }
    100                                                      }
    101                                                  }
    102                                              
    103                                                  covergroup cvr_gb;
    104                                                      A_cp : coverpoint A {
    105                                                          bins A_data_0 = {ZERO};
    106                                                          bins A_data_max={MAXPOS};
    107                                                          bins A_data_min={MAXNEG};
    108                                                          bins A_data_walkingones[]={001, 010, 100} iff(red_op_A) ;
    109                                                          bins A_data_default=default;
    110                                                      }
    111                                                      B_cp : coverpoint B {
    112                                                          bins B_data_0 = {ZERO};
    113                                                          bins B_data_max={MAXPOS};
    114                                                          bins B_data_min={MAXNEG};
    115                                                          bins B_data_walkingones[]={001, 010, 100} iff(!red_op_A && red_op_B) ;
    116                                                          bins B_data_default=default;
    117                                                      }
    118                                                      ALU_cp : coverpoint opcode {
    119                                                          bins Bins_shift[] = {SHIFT,ROTATE};
    120                                                          bins Bins_arith[] = {ADD,MULT};
    121                                                          bins Bins_bitwise[] = {OR,XOR};
    122                                                          illegal_bins Bins_invalid = {INVALID_6,INVALID_7};
    123                                                          bins Bins_trans = (OR => XOR => ADD => MULT => SHIFT => ROTATE);
    124                                                      }
    125                                                  endgroup
    126                                              
    127                                                  function new();
    128             1                          1             cvr_gb = new();


COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /process/inputs/cvr_gb                          100.00%        100          -    Covered              
    covered/total bins:                                    13         13          -                      
    missing/total bins:                                     0         13          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint A_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint B_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint ALU_cp                                 100.00%        100          -    Covered              
        covered/total bins:                                 7          7          -                      
        missing/total bins:                                 0          7          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/process::inputs::cvr_gb        100.00%        100          -    Covered              
    covered/total bins:                                    13         13          -                      
    missing/total bins:                                     0         13          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint A_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin A_data_0                                     9199          1          -    Covered              
        bin A_data_max                                   9213          1          -    Covered              
        bin A_data_walkingones[1]                        4133          1          -    Covered              
        default bin A_data_default                      39804                     -    Occurred             
    Coverpoint B_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin B_data_0                                     9629          1          -    Covered              
        bin B_data_max                                   9313          1          -    Covered              
        bin B_data_walkingones[1]                        1901          1          -    Covered              
        default bin B_data_default                      39692                     -    Occurred             
    Coverpoint ALU_cp                                 100.00%        100          -    Covered              
        covered/total bins:                                 7          7          -                      
        missing/total bins:                                 0          7          -                      
        % Hit:                                        100.00%        100          -                      
        illegal_bin Bins_invalid                        15386                     -    Occurred             
        bin Bins_shift[SHIFT]                            8835          1          -    Covered              
        bin Bins_shift[ROTATE]                           8002          1          -    Covered              
        bin Bins_arith[ADD]                              8568          1          -    Covered              
        bin Bins_arith[MULT]                             8679          1          -    Covered              
        bin Bins_bitwise[OR]                             8657          1          -    Covered              
        bin Bins_bitwise[XOR]                            8222          1          -    Covered              
        bin Bins_trans                                      1          1          -    Covered              

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 1

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/ALSU_tb/randomdata_first_loop/#anonblk#102282978#46#4#/#ublk#102282978#46/immed__47
                     ALSU_tb.sv(47)                     0          1
/ALSU_tb/randomdata_second_loop/#anonblk#102282978#65#4#/#ublk#102282978#65/immed__66
                     ALSU_tb.sv(66)                     0          1
/ALSU_tb/cover_transition/immed__124
                     ALSU_tb.sv(124)                    0          1
/ALSU_tb/cover_transition/immed__121
                     ALSU_tb.sv(121)                    0          1
/ALSU_tb/cover_transition/immed__118
                     ALSU_tb.sv(118)                    0          1
/ALSU_tb/cover_transition/immed__115
                     ALSU_tb.sv(115)                    0          1
/ALSU_tb/cover_transition/immed__112
                     ALSU_tb.sv(112)                    0          1
/ALSU_tb/cover_transition/immed__104
                     ALSU_tb.sv(104)                    0          1

Total Coverage By Instance (filtered view): 95.14%

